/*
 * List
 *
 *  Created on: May 10, 2017
 *      Author: zollder
 */

#ifndef LIST_H_
#define LIST_H_

#include "exceptions/InvalidPositionException.h"
#include "exceptions/EmptyContainerException.h"
#include "exceptions/BoundaryViolationException.h"

#include "stdio.h"

template <typename Object>
class List {
public:
	class Position;

	int size() const;
	bool isEmpty() const;
	bool isFirst(const Position& position) const throw(InvalidPositionException);
	bool isLast(const Position& position) const throw(InvalidPositionException);

	Position first() const;
	Position last() const;
	Position before(const Position& position) const;
	Position after(const Position& position) const;

	Position insertFirst(const Object& element);
	Position insertBefore(const Position& position, const Object& element);
	Position insertAfter(const Position& position, const Object& element);

	void replace(const Position& position, const Object& element);
	void swap(const Position& position1, const Position& position2);
	void remove(const Object& element);
	void clear();
	void print();
};



#endif /* LIST_H_ */
